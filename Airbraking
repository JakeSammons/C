#include <stdio.h>
#include <math.h>

#define G 9.81
#define SEA_DENSITY 1.225
#define TIME_DELTA 0.1
#define CD_BRAKE 0.1
#define CD_DRAG 0.00912
#define GOAL 4506


double density_from_altitude(double altitude)
{
	return SEA_DENSITY * pow(1 + (-.0065 * altitude / 287), 4.25363734);
}


int main(void)
{
	double time;
	double alt = 0;
	double velocity = 0;
	double mass;
	double density;
	double drag;
	double weight;
	double force;
	double thrust;
	double brake;
	double tend;
	double fneed;

	thrust = 2600;
	weight = 131.997;
	for (time = 0; time < 5.4; time += TIME_DELTA) {
		if (time >= 3) {
			thrust -= (time < 4 ? 850 : 1250) * TIME_DELTA;
		}

		alt += velocity * TIME_DELTA;
		density = density_from_altitude(alt);
		drag = .5 * density * velocity * velocity * CD_DRAG;
		weight -= 1.330185185 * TIME_DELTA;
		force = thrust - drag - weight;
		mass = weight / G;
		velocity += force / mass * TIME_DELTA;

		printf("altitude = %f\nvelocity = %f\ntime = %f\n\n", alt, velocity, time);
	}

	weight = 124.814;
	mass = weight / G;
	for (; velocity > 0; time += TIME_DELTA) {
		tend = (GOAL - alt) * 2  / velocity;
		fneed = velocity * mass / tend;
		alt += velocity * TIME_DELTA;
		density = density_from_altitude(alt);
		drag = .5 * density * velocity * velocity * CD_DRAG;
		brake = .5 * density * velocity * velocity * CD_BRAKE;

		if (drag + weight < fneed) {
			force = -drag - brake - weight;
			printf("airbrakes on\n");
		}
		else {
			force = -drag - weight;
			printf("airbrakes off\n");
		}

		velocity += force / mass * TIME_DELTA;

		printf("altitude = %f\nvelocity = %f\ntime = %f\n\n", alt, velocity, time);
	}
	return 0;
}
